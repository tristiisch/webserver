name: Build Demo images

on:
  workflow_run:
    workflows: ["Build base images"]
    types:
      - completed
  workflow_dispatch:

env:
    REGISTRY_IMAGE: ${{ vars.DOCKER_REGISTRY_URL }}/${{ github.actor }}
    IMAGE_PHP_APP_NAME: php-demo-fpm
    IMAGE_PROXY_APP_NAME: php-demo-nginx

jobs:

  docker_image_build_app:
    name: "PHP App - Build Docker"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php_major:
          - "5"
          - "7"
          - "8"
        php_environnement:
          - "production"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PHP_APP_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ vars.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker image Build
        id: build
        uses: docker/build-push-action@v5
        with:
          file: ./.include/php-demo/Dockerfile
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max
          build-args: |
            PHP_MAJOR=${{ matrix.php_major }}
          target: app_${{ matrix.php_environnement }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PHP_APP_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_PHP_APP_NAME }}-${{ matrix.php_major }}-${{ matrix.php_environnement }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  docker_image_push_app:
    name: "PHP App - Push Docker"
    needs: ["docker_image_build_app"]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php_major:
          - "5"
          - "7"
          - "8"
        php_environnement:
          - "production"
    if: (github.ref_type == 'tag') || (github.ref_type == 'branch' && github.ref == 'refs/heads/main')

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.IMAGE_PHP_APP_NAME }}-${{ matrix.php_major }}-${{ matrix.php_environnement }}
          path: /tmp/digests
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PHP_APP_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.php_environnement == 'production' && matrix.php_major == '8' }}
            type=raw,value=production,enable=${{ matrix.php_environnement == 'production' && matrix.php_major == '8' }}
            type=raw,value=development,enable=${{ matrix.php_environnement == 'development' && matrix.php_major == '8' }}
            type=raw,value=${{ matrix.php_major }},enable=${{ matrix.php_environnement == 'production' }}
            type=raw,value=${{ matrix.php_major }}-${{ matrix.php_environnement }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PHP_APP_NAME }}@sha256:%s ' *)

  docker_image_build_proxy_demo:
    name: "NGinX Demo - Build Docker"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PROXY_APP_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ vars.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker image Build
        id: build
        uses: docker/build-push-action@v5
        with:
          file: ./.include/php-demo/Dockerfile
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max
          target: proxy
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PROXY_APP_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_PROXY_APP_NAME }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  docker_image_push_proxy_demo:
    name: "NGinX Demo - Push Docker"
    needs: ["docker_image_build_proxy_demo"]
    runs-on: ubuntu-latest
    if: (github.ref_type == 'tag') || (github.ref_type == 'branch' && github.ref == 'refs/heads/main')

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.IMAGE_PROXY_APP_NAME }}-*
          path: /tmp/digests
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PROXY_APP_NAME }}
          tags: |
            type=raw,value=latest

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ env.REGISTRY_IMAGE }}/${{ env.IMAGE_PROXY_APP_NAME }}@sha256:%s ' *)
